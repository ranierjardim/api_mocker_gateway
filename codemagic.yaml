workflows:
  snapcraft-release:
    name: Snapcraft Release
    working_directory: src/app
    instance_type: linux
    max_build_duration: 5
    environment:
      groups:
        - SNAP_CRED
      flutter: 3.7.6
      vars:
        SNAPCRAFT_BUILD_ENVIRONMENT: host
    scripts:
      - name: Setup keyring
        script: |
          sudo apt install gnome-keyring
          sudo dbus-run-session -- sh
          echo "asd" | gnome-keyring-daemon --unlock
      - name: Downgrade snapcraft version
        script: |
          sudo snap install codemagic_dependencies/modded_snapcraft_7.3.1_amd64.snap --dangerous --classic
      - name: Authenticate with Snap Store
        script: | 
          echo $SNAPCRAFT_EMAIL_CREDENTIAL
          echo $SNAPCRAFT_PASSWORD_CREDENTIAL
          snapcraft -V
          snapcraft login --email $SNAPCRAFT_EMAIL_CREDENTIAL --password $SNAPCRAFT_PASSWORD_CREDENTIAL
      - name: Create a snap
        script: snapcraft snap --output api-mocker-gateway.snap
      - name: Upload and release
        script: snapcraft upload api-mocker-gateway.snap --release stable
  Windows-workflow:
    name: Windows release workflow
    working_directory: src/app
    instance_type: windows_x2
    max_build_duration: 5
    environment:
      groups:
        - MICROSOFT_STORE_CREDENTIALS
      flutter: 3.7.6
    scripts:
      - name: Get Flutter packages
        script: flutter packages pub get
      - name: Package Windows
        script: flutter pub run msix:create
    artifacts:
      - build/windows/**/*.msix
    publishing:
      partner_center:
        store_id: 9NVD2K8CB7RG
        tenant_id: $TENANT_ID
        client_id: $CLIENT_ID
        client_secret: $PARTNER_CLIENT_SECRET
      email:
        recipients:
          - ranierjardim@gmail.com
        notify:
          success: true
          failure: true
  macOS-workflow:
    name: macOS Workflow
    working_directory: src/app
    instance_type: mac_mini_m1
    max_build_duration: 5
    integrations:
      app_store_connect: Codemagic CI
    environment:
      flutter: 3.7.6
      xcode: latest
      cocoapods: default
      groups:
        - GENERAL
    scripts:
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Fetch Mac App Distribution certificate and Mac App Store profile
        script: |
          app-store-connect fetch-signing-files \
            $BUNDLE_ID \
            --platform MAC_OS \
            --type MAC_APP_STORE \
            --create
      - name: Fetch Mac Installer Distribution certificates
        script: |
          app-store-connect list-certificates --type MAC_INSTALLER_DISTRIBUTION --save
          # app-store-connect create-certificate --type MAC_INSTALLER_DISTRIBUTION --save
      - name: Set up signing certificate
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
      - name: Build Flutter macOS
        script: |
          flutter build macos --release
      - name: Package macOS application
        script: |
          set -x
          # Command to find the path to your generated app
          APP_NAME=$(find $(pwd) -name "*.app")
          cd $(dirname "$APP_NAME")
          PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
          # Create an unsigned package
          xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg
          # Find the installer certificate commmon name in keychain
          LISTA_CERTIFICADOS=$(keychain list-certificates)
          INSTALLER_CERT_NAME=$(keychain list-certificates \
            | jq '.[]
            | select(.common_name
            | contains("Mac Developer Installer"))
            | .common_name' \
            | xargs)
          # Sign the package
          xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME"
    artifacts:
      - build/macos/**/*.pkg
    publishing:
      email:
        recipients:
          - ranierjardim@gmail.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        submit_to_app_store: false